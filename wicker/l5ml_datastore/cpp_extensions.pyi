"""Interface declarations so that mypy handled the cpp code correctly.
Please keep this file in sync with l5ml_datastore/cpp/cpp_extensions.cpp
"""
from typing import Any, List

import pyarrow  # type: ignore

def apply_temporal_window_specification(
    arg0: pyarrow.Table, arg1: WindowSpecification, arg2: str, arg3: str
) -> pyarrow.Table: ...
def sample_by_range_key(arg0: pyarrow.Table, arg1: str, arg2: str, arg3: int) -> pyarrow.Table: ...

class CellSpecification:
    __pybind11_module_local_v4_gcc_libstdcpp_cxxabi1011__: Any = ...
    def __init__(self, min_offset: int, max_offset: int, is_required: bool) -> None: ...
    @property
    def is_required(self) -> bool: ...
    @property
    def max_offset(self) -> int: ...
    @property
    def min_offset(self) -> int: ...

class ColumnHistorySpecification:
    __pybind11_module_local_v4_gcc_libstdcpp_cxxabi1011__: Any = ...
    def __init__(self, column_name: str, spec: List[CellSpecification], results_as_list: bool = ...) -> None: ...
    def set_results_as_list(self, arg0: bool) -> ColumnHistorySpecification: ...
    @property
    def column_name(self) -> str: ...
    @property
    def results_as_list(self) -> bool: ...
    @property
    def spec(self) -> List[CellSpecification]: ...

class WindowSpecification:
    __pybind11_module_local_v4_gcc_libstdcpp_cxxabi1011__: Any = ...
    def __init__(self, column_specs: List[ColumnHistorySpecification]) -> None: ...
    @property
    def column_specs(self) -> List[ColumnHistorySpecification]: ...
